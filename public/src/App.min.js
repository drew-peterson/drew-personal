(function(){
	'use strict';

	var app = angular.module('DrewPersonalSiteApp',
		[
		'MainHeader',
		'ngAnimate'
		]
	);   

	app.component('mainContent',{
		templateUrl: '../views/main.html'
	});

})();
angular.module('MainHeader',[]);  
angular.module('DrewPersonalSiteApp')
.directive('tabs', function(){
	return {
		replace: true,
		templateUrl: '../views/tabs.public.html',
		controllerAs: 'Tabs',
		controller: function(){ 
			var Tabs = this;
			Tabs.website = true;

			this.changeTab = function(idx){
				if(idx > 0){
					Tabs.website = !Tabs.website;
					Tabs.sideProject = !Tabs.sideProject;
				}else{
					Tabs.sideProject = !Tabs.sideProject;
					Tabs.website = !Tabs.website;
				}
			} 
		}
	};
});

var app = angular.module('DrewPersonalSiteApp');
app.controller('ProjectCtrl', function(){
	var self = this;

	self.projects = [
			{
				img: '../images/wholesale.png',
				name: 'Pacifica Coffee Wholesale',

				url: 'http://pacificacoffee.herokuapp.com',
				github:'http://github.com/weeznog/pacifica-coffee-wholesale',
				description: 'Small coffee roaster with a focus on wholesale customers only. Admin portal and shoping bag experience.',
				tags: ['Angular', 'Node', 'Express', 'MongoDB', 'Gulp', 'Sass'],
				status: ['Work In Progress','wip']
			},
			{
				img: '../images/lafayettefashionista.jpg',
				name: 'Lafayette Fashionista',

				url: 'http://www.lafayettefashionista.com',
				github: 'http://github.com/weeznog/lafayettefashionista',
				description: 'Informational website - learn more about owner, consignment, directions and new items.',
				tags: ['Angular', 'Node', 'Express', 'Pintest Api', 'Gulp', 'Sass'],
				status: ['Complete','complete']
			},
			{
				img: '../images/pacifica.png', 
				name: 'Pacifica Coffee',
				url: 'http://pacifica.herokuapp.com/',
				github:'http://github.com/weeznog/pacifica-coffee',
				description: 'E-commerce website with admin portal, shopping bag and checkout with Stripe api.',
				tags: ['Rails', 'Ruby', 'Sass', 'JQuery', 'PostgresDB', 'Stipe Api'],
				status: ['Canceled','canceled']
			}
		]; 

		// side Projects

		self.sideProjects = [ 
			{
				img: '../images/potato.png',
				name: 'Potato Quick App', 
				url: 'http://potato-quick-app.herokuapp.com/',
				github:'http://github.com/weeznog/potato-quick-app',
				description: 'Coding Challenge for Potato, using Flickr Api.',
				tags: ['Angular', 'Node', 'Express', 'Flickr Api', 'Gulp', 'Sass'],
				status: ['Complete','complete']
			},
			{
				img: '../images/onhub.png',
				name: 'On Hub Clone',
				url: 'http://onhub-clone.herokuapp.com/',
				github:'http://github.com/weeznog/onhub-clone',
				description: 'Clone of google product OnHub - on.google.com',
				tags: ['Angular', 'Node', 'Express', 'Gulp', 'Sass'],
				status: ['Work In Progress', 'wip']
			},
				{
				img: '../images/personal.png',
				name: 'Personal Website',
				url: 'http://drewpeterson.me',
				github:'http://github.com/weeznog/drew-personal',
				description: 'My Personal Website, showing off my best work!',
				tags: ['Angular', 'Node', 'Express', 'Gulp', 'Sass'],
				status: ['Work In Progress','wip']
			},
		];
});

app.component('project', {
	bindings: {
		project: '<'
	},
	templateUrl: '../views/project.public.html'

});  



angular.module('MainHeader')
.directive('headerContent',function(){ 
	return {
		replace: true,
		transclude: true,
		controller: function(){
			var HC = this;
			HC.name = "Drew Peterson";
			HC.title = "FrontEnd Developer";
			HC.img = "../images/profile-picture.jpg";
		},
		controllerAs: 'HC',
		templateUrl: '../views/headerContent.public.html' 
	} 
})
angular.module('MainHeader')
.directive('mainHeader',function($animate){ 
	return {
		replace: true,
		transclude: true,
		controllerAs: 'MH',
		templateUrl: '../views/mainHeader.public.html',
		controller: function(){
			var MH = this;
		},
		link: function(scope, elem, attrs, MH){
		
		}
	}
})
angular.module('MainHeader')
.directive('scrollHeader', function($animate){
	return {
		replace: true,
		templateUrl: '../views/scrollHeader.public.html',
		controller: function(){
			var SH = this;
			SH.showScrollHeader;
		},
		controllerAs: 'SH',
		link: function(scope, attrs, elem, SH){
			window.addEventListener('scroll', function(){
				var pos = document.body.scrollTop;
				var contact = $('#sideNav .open');

				// scroll almost below grayscale bar header
				if(pos >= 270){
					contact.addClass('scrolled');

					if(checkClass()){
						scope.$apply(function(){
							SH.showScrollHeader = true; 
						});
					};
				}else if(pos <= 270){
					contact.removeClass('scrolled');

					if(!checkClass()){
						scope.$apply(function(){
							SH.showScrollHeader = false;
						});
					};
				}

				function checkClass(){
					var contact = $('#sideNav .open');
					return contact.hasClass('scrolled');
				}

			})
		}

	};
});
angular.module('MainHeader')
.directive('sideNav', function($animate){
	return { 
		replace: true,
		templateUrl: '/../views/sideNav.public.html',
		controllerAs: 'SN',
		controller: function(){

			this.contacts = [
				{icon: '../images/linkedin.png', link: 'linkedin.com/in/drewmpeterson', url: 'https://www.linkedin.com/in/drewmpeterson'},
				{icon: '../images/github.png', link: 'github.com/weeznog', url: 'https://www.github.com/weeznog'},
				{icon: '../images/email.png', link: 'drew.m.peterson@gmail.com', url: 'mailto:drew.m.peterson@gmail.com'},
				{icon: '../images/phone.png', link: '425-765-9911', url: 'tel:425-765-9911'}
			];
		},
		link: function(scope, elem, attrs, SN){
			var close = $('#sideNav .close');
			var open = $('#sideNav .open');
			var sideNav = $('#sideNav .contentWrap');
			var mask = $('#sideNavMask');
			var body = $('body');

			// close sideNav
			close.on('click', function(){
				closeSideNav();
			});

			// open sideNAV
			open.on('click', function(){
				body.css('overflow', 'hidden');

				scope.$apply(function(){
					$animate.removeClass(sideNav, 'hide');
					$animate.removeClass(mask, 'hide');
				});

				mask.on('click', function(){
					closeSideNav()				
				})
			});

			function closeSideNav(){
				body.css('overflow', 'auto');
				scope.$apply(function(){
					$animate.addClass(sideNav, 'hide');
					$animate.addClass(mask, 'hide');
				});
			}
		}
	};
})
angular.module('MainHeader')
.directive('headerSocial',function($animate){ 
	return {
		replace: true,
		controller: function(){
			var HS = this;

			HS.img = "../images/profile-picture.jpg";


			HS.selectDetail = function(idx){
				var icon = HS.socialIcons[idx].details;

				if(HS.detail === icon){
					HS.detail = undefined;
				}else{
					HS.detail = icon;
				}
			}
		},
		controllerAs: 'HS',
		link: function(scope,elem,attrs,HS){
			var details = $('.icon-details');

			scope.$watch('HS.detail', function(newVal,oldVal){
				if(newVal != undefined){
					// trigger animation
					details.removeClass('show'); // has to be none angular
					$animate.addClass(details,'show');
				}else{
					details.removeClass('show'); // has to be none angular
				}
			},true);
		},
		templateUrl: '../views/headerSocial.public.html' 
	}
})
//# sourceMappingURL=App.min.js.map
